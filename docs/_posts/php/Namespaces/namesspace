ما هي مساحات الأسماء؟

namespaces : هي وسيلة لتغليف العناصر .

تسمح لك مساحة الاسم بوضع مجموعة من التعليمات البرمجية(classes, functions , constants) تحت اسم ما دون حدوث أي تعارض , سوف تعيش التعليمات البرمجية في مساحة الاسم ,

يمكن من خلال مساحات الأسماء أستخدم ذات ( constants - classes - functions ) في أماكن مختلفة من البرنامج دون التعارض أو التضارب .

أعجبني حين كنت أبحث عن ماهي مساحات الاسماء أحد الشروح التي يقول فيها : لو كان لديك صديقين يدعيان محمد , و تريد أن تخبر والدتك أن كنت مع محمد , لكن أي محمد , من هنا جائت فكرة مساحة الاسماء .


- لو كان لدنيا الوظيفة التالية . function name()

<?php

function name()
{
    echo "knows1";
}

//
name();

?>

-  لو اردنا اعادة استخدام الوظيفة التالية لعمل شئ جديد . function name()


<?php

function name()
{
    echo "knows2";
}

//
name();

?>

- لو استدعيت الوظيفة من خلال name();

هنا سوف يحد التعارض .

- كان لا بد من التمييز من خلال namespace .


<?php
namespace knows1;
function name()
{
    echo "knows1";
}

//
name();

?>


<?php
namespace knows2;
function name()
{
    echo "knows2";
}

//
name();

?>


-عندما نريد طلب الوطيفة .

\knows1\name();
\knows2\name();


- في حال أجتمعت الوظيفتان في مكان واحد .


namespace knows2;
name(); // يعود بالثانية

\knows1\name(); // يعود بالاولى

#############ربط من دروبال #############

https://www.sitepoint.com/php-53-namespaces-basics/

كما يزيد حجم مكتبة رمز PHP الخاص بك , ستقوم بطريق الخطأ بإعادة استخدام وظيفة أو اسم فئة تم إعلانها من قبل , تتفاقم المشكلة إذا حاولت إضافة مكونات أو إضافات إضافية لجهة خارجية ,ماذا لو أن اثنين أو أكثر من مجموعات التعليمات البرمجية تنفذ Database class ؟

الحل الوحيد كان
long class/function names .

على سبيل المثال ، بادئات وورد تبدأ ب WP_  و يستخدم Zend بادئة الاسماء طويلة حداً ,يمكن حل مشاكل تضارب الأسماء بمساحات الأسماء ,

- PHP constants .
- PHP classes .
- PHP functions .

يمكن تجميعها في مكتبات مساحات الأسماء.

### كيف يتم تحديد مساحات الأسماء؟



##  كيفية الرجوع إلى مساحات الأسماء داخل دروبال ؟


بشكل افتراضي ، يتم وضع جميع -
constant, class and function names
في مساحة عالمية - كما كان الحال قبل دعم مساحات الأسماء.

يتم تعريف رمز باستخدام مفرد
namespace
الكلمة الرئيسية في الجزء العلوي من ملف PHP الخاص بك



يجب أن يكون الأمر الأول باستثناء

declare

<?php
// define this code in the MyProject namespace
namespace MyProject;
